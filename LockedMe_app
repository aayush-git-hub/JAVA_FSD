package locker_app;
import java.io.File;
import java.io.IOException;
import java.util.Scanner;
import java.util.Arrays;

public class first {
	
	public static void main(String[] args) {
		Scanner rtf = new Scanner(System.in);
		System.out.println("*******---Welcome to LockedMe.com ---*******\n");
		System.out.println("Developer Name : Aayush Ranjan Singh \nCompany : TekSystems Global Services\n\n****************_____________________****************");
		start:
		while(true) {
			
		System.out.println("\nPlease choose the below options to perform your action\n");
		System.out.println("1.Retrieve all the file name in ascending order\n2.Business level features\n3.Close the application\nEnter your choice:  ");
		
		int Choice=rtf.nextInt();
		
		switch(Choice) {
		case 1:
			File dir = new File("D:\\Temp");

		      File[] files = dir.listFiles();

		      Arrays.sort(files, (f1, f2) -> f1.compareTo(f2));

		      for (File file : files) {
		         if (!file.isHidden()) {
		            if (file.isDirectory()) {
		               System.out.println("DIR \t" + file.getName());
		            } else {
		               System.out.println("FILE\t" + file.getName());
		            }
		         }
		      }
		    break;
	
	   case 2:
		   task:
		   do {
		   System.out.println("\n********Business level features*********\n");
		   System.out.println("Please choose from the below option to perform your actions\n");
		   System.out.println("1. Add a file\n2. Delete a file\n3. Search a file\n4. Return to main window\nEnter your choice:");
		   int c = rtf.nextInt();
		   
		   switch(c) {
		   case 1:
			   
			   boolean success = false;
			   System.out.println("Enter file name to be created ");
			   String filename = rtf.next();
			   File f = new File("D:\\Temp",filename);
			   if (f.exists()) {
				   System.out.println("File already exists");}
			   else {
				   System.out.println("No such file exists, creating now");}
			   try {
				  success = f.createNewFile();
			       }    
			   catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			      }
				   if (success) {
					   System.out.printf("Successfully created new file: %s%n", f);}
				   else { System.out.printf("Failed to create new file: %s%n", f);}
				   
				   break;

				 
		   case 2:
			   
			   System.out.println("Enter file name to be deleted ");
			   String file_to_delete = rtf.nextLine();
			   File z = new File("D:\\Temp",file_to_delete);
			   if (z.exists()) {
				   System.out.println("File successfully found");}
			   else {
				   System.out.println("No such file exists, deletion unsuccessful");}
			     success = z.delete();
				   if (success) {
					   System.out.printf("Successfully deleted file: %s%n", z);}
				   else { System.out.printf("Failed to delete the file: %s%n", z);}
				   
				   break;
				   
		   case 3:
			  
		       System.out.println("Enter the file to be searched.. " );
		       String name = rtf.next();
		        File directory = new File("D:\\Temp"); 

		       String[] flist = directory.list(); 
		        int flag = 0; 
		        if (flist == null) { 
		            System.out.println("Empty directory."); 
		        } 
		        else { 
		  
		            // Linear search in the array 
		            for (int i = 0; i < flist.length; i++) { 
		                      String u = flist[i]; 
		                if (u.equals(name)) { 
		                    System.out.println(name + " found"); 
		                    flag = 1; 
		                } 
		            } 
		        } 
		  
		        if (flag == 0) { 
		            System.out.println("File Not Found"); 
		        } 
		     
		       break;
		       
		   case 4:
			   break task;
		    
		   default:
		       System.out.println("invalid input");
			   }
		       }while(true);
		       break;
		       
			   
	    case 3:
	    	System.out.println("Closing the application......");
	    	System.out.println("Application closed");
	    	break start;
		
	    default:
		     System.out.println("invalid input");
			   }
		   }
	rtf.close();	
	}
}		
			
		
